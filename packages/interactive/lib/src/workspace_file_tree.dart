import 'dart:io';

import 'package:logging/logging.dart';
import 'package:path/path.dart' as p;

class WorkspaceFileTree {
  static final log = Logger('WorkspaceFileTree');

  final String directory;

  WorkspaceFileTree._(this.directory);

  static Future<WorkspaceFileTree> create(String directory) async {
    print("preparing workspace");
    await _prepare(directory);
    print('Workspace: $directory');
    return WorkspaceFileTree._(directory);
  }

  void dispose() {
    // maybe remove the dir later?
  }

  String get pathAutoGeneratedDart =>
      p.join(directory, 'lib', 'auto_generated.dart');

  String get pathPackageConfig =>
      p.join(directory, '.dart_tool', 'package_config.json');

  static Future<String> getTempDirectory() async => p.join(
      Directory.systemTemp.path,
      'dart_interactive_workspace_${DateTime.now().toIso8601String().replaceAll(":", "").replaceAll(".", "")}');

  static Future<void> _prepare(String dir) async {
    Directory(dir).createSync(recursive: true);
    Directory(p.join(dir, 'lib')).createSync(recursive: true);

    final pathPubspecYaml = File(p.join(dir, 'pubspec.yaml'));
    if (!pathPubspecYaml.existsSync()) {
      pathPubspecYaml.writeAsStringSync(_kDefaultPubspecYaml);
    }
  }
}

const _kDefaultPubspecYaml = '''
name: execution_workspace
environment:
  sdk: ">=2.18.0 <3.0.0"
''';
